#######################################################################
##                            REQUETES                               ## 
#######################################################################
#
#
# ce-ci est le fichier contenant toutes les requetes qui seront utilisé depuis un client externe au serveur 
#
#
#
# le format des requete est :
#
# "nom_de_la_requete;description;argument;droit;requete_sql"
#
# nom_de_la_requete:
#   nom utilisé pour identifier la requete
# description:
#	 description de la requete qui sera fourni a l'utilisateur pour le mode consol
# argument: 
#	séparé par des espace, les 4 premier code represente des type avec une valeur à definir,
#	le reste correspond a des variables du serveur 
#   	(1:int,2:string,3:boolean,4:date,5:client.ID,6:current.date)
# droit:
#	entier representant les droits d'execution de la requete 
#   	(1:client,2:developpeur,3:gerante) 
# requete_sql:
#	la requete péparé qui sera à executé 
#
#
#
#
#      ex: 
#
#
#
# par convention nous nommerons les requetes comme suit: action_donneArgument1Argument2
# 		- action: add,del,get,set
#		- donne: element sur lequel s'execute l'action
# 		- argument: en fonction de 
#
#
#
############# gerante ################
#
# get_infoClients: retourne la liste des utilisateurs 
get_infoClients;les informations des clients (aucun);;3;SELECT ID,nom,prenom,developpeur,mail,mela,date_inscription,date_lastconnect FROM client
#
# get_infoClientID: retourne les information d'un client 
get_info_client;les informations d'un client (ID);1;3;SELECT ID,nom,prenom,developpeur,mail,mela,date_inscription,date_lastconnect FROM client WHERE ID=?
#
# get_infoClientMail: retourne les information d'un client 
get_info_client;les informations d'un client (mail);2;3;SELECT ID,nom,prenom,developpeur,mail,mela,date_inscription,date_lastconnect FROM client WHERE mail=?
#
# add_periph: ajoute un nouveau periphérique disponible
add_periph;ajoute un nouveau peripherique (nom, type, fabricant);2 1 1;3;INSERT INTO peripheriques('',?,?,?)
#
# add_periphFabricant : ajoute un nouveaux fabricant de peripherique
add_periphFabricant;ajoute un nouveau peripherique (nom, type, fabricant);2;3;INSERT INTO peripheriques_fabricant('',?)
#
# add_periphType: ajoute un nouveau type de peripherique
add_periphType;ajoute un nouveau peripherique (nom, type, fabricant);2;3;INSERT INTO peripheriques_type('',?)
# 
#
#
############# client ################
#
# get_infoMe: retourne les information personnelle d'un client
get_infoMe;ajoute un nouveau peripherique (nom, type, fabricant);5;1;SELECT ID,nom,prenom,developpeur,mail,mela,date_inscription,date_lastconnect FROM client WHERE ID=?
#
# set_mailMe: change l'adresse mail d'un client
set_mailMe;ajoute un nouveau peripherique (nom, type, fabricant);2 5;1;UPDATE client SET mail=? WHERE ID=?
#
# set_mdpMe: change le mot de passe d'un client 
set_mdpMe;ajoute un nouveau peripherique (nom, type, fabricant);2 5;1;UPDATE client SET mdp=? WHERE ID=?
#
# add_paiementMe: rajoute des information de paiement a un client
set_me_paiementMe;ajoute un nouveau peripherique (nom, type, fabricant);5 3 1 4;1;INSERT INTO paiement(? ? ? ?)
#
# get_paiementMe: retourne les informations de paiement d'un client
get_paiementMe;ajoute un nouveau peripherique (nom, type, fabricant);5;1;SELECT * FROM paiement WHERE client=?
#
# set_paiementMe: met a jour les information de paiement d'un client
set_paiementMe;ajoute un nouveau peripherique (nom, type, fabricant);3 1 4 5;1;UPDATE paiement SET type=? numero=? expiration=? WHERE ?
#
#
#
#
# get_periphFabricant
get_periphFabricant;retourne la liste des fabricant;1;SELECT * FROM paripheriques_fabricant
#
# get_periphType
get_periphType;retourne la liste des fabricant;1;SELECT * FROM paripheriques_type
#
# get_peripheriques
get_peripherique;retourne la liste de tout les peripheriques;;1;SELECT p.ID, p.nom, t.nom, f.nom FROM peripheriques AS p LEFT JOIN peripheriques_type AS t ON t.ID=p.peripherique_type LEFT JOIN peripheriques_fabricant AS f ON f.ID=p.peripherique_fabricant
#
#get_peripheriqueFabricantType
get_peripheriqueFabricantType;retourne la liste de tout les peripheriques en fontion du fabricant et du type(fabricant.id,type.id);1 1;1;SELECT p.ID, p.nom, t.type, f.fabricant FROM peripheriques AS p LEFT JOIN peripheriques_type AS t ON t.ID=p.peripherique_type LEFT JOIN peripheriques_fabricant AS f ON f.ID=p.peripherique_fabricant WHERE f.ID=? AND t.ID=?
#
# add_periphMe: ajoute un nouveau peripherique a un client
add_periphMe;ajoute un nouveau peripherique a un client(peripherique.id, systeme_exploitation.id);5 1 1 6;1;INSERT INTO peripheriques_client('',?,?,?,?)
#
# del_periphMe: enleve un peripherique d'un client
del_periphMe;supprime le peripherique d'un client(id);5 1;1;DELETE FROM peripheriques_client WHERE client=? AND ID=?
#
# 
#
#
# get_categorie: retourne la liste des categorie d'application
get_categorie;ajoute un nouveau peripherique (nom, type, fabricant);;1;SELECT * FROM categorie
#
# get_Se
get_Se;retourne les systemes d'exploitation disponible;;1;SELECT * FROM systeme_exploitation 
#
# get_app: retourne toute les applications
get_app;ajoute un nouveau peripherique (nom, type, fabricant);;1;SELECT a.ID,a.nom,a.version,a.categorie,a.developpeur,a.tags,a.payante,a.date,a.mela,p.prix,p.renouvellement,c.nom_categorie, AVG(v.elstar) FROM applications AS a LEFT JOIN payante AS p ON a.ID = p.application LEFT JOIN categorie AS c ON a.categorie = c.ID LEFT JOIN avis AS v ON a.ID = v.application GROUP BY a.ID
#
# get_appSe retourne toute les applications pour un SE donne
get_appSe;ajoute un nouveau peripherique (nom, type, fabricant);1;1;SELECT a.ID,a.nom,a.categorie,a.developpeur,a.tags,a.payante,a.date,a.mela,p.prix,p.renouvellement,c.nom_categorie FROM applications AS a LEFT JOIN payante AS p ON a.ID = p.application LEFT JOIN categorie AS c ON a.categorie = c.ID  LEFT JOIN applicationsSE AS s ON s.application = a.ID WHERE s.systeme_exploitation=?
#
# get_appCategorie: retourne les application appartenant a une categorie
get_appCategorie;ajoute un nouveau peripherique (nom, type, fabricant);1;1;SELECT a.ID,a.version,a.nom,a.categorie,a.developpeur,a.tags,a.payante,a.date,a.mela,p.prix,p.renouvellement,c.nom_categorie FROM applications AS a LEFT JOIN payante AS p ON a.ID = p.application LEFT JOIN categorie AS c ON a.categorie = c.ID  LEFT JOIN applicationsSE AS s ON s.application = a.ID WHERE categorie=?
#
# get_appTag: retourne les application contenant le tag  
get_appTag;ajoute un nouveau peripherique (nom, type, fabricant);2;1;SELECT a.ID,a.nom,a.version,a.categorie,a.developpeur,a.tags,a.payante,a.date,a.mela,p.prix,p.renouvellement,c.nom_categorie FROM applications AS a LEFT JOIN payante AS p ON a.ID = p.application LEFT JOIN categorie AS c ON a.categorie = c.ID  LEFT JOIN applicationsSE AS s ON s.application = a.ID WHERE tags LIKE '%?%' 
# 
# get_appSeCategorie: retourne les application pour un SE donne et appartenent a une categorie 
get_appSeCategorie;ajoute un nouveau peripherique (nom, type, fabricant);1 1;1;SELECT a.ID,a.version,a.nom,a.categorie,a.developpeur,a.tags,a.payante,a.date,a.mela,p.prix,p.renouvellement,c.nom_categorie FROM applications AS a LEFT JOIN payante AS p ON a.ID = p.application LEFT JOIN categorie AS c ON a.categorie = c.ID  LEFT JOIN applicationsSE AS s ON s.application = a.ID WHERE s.systeme_exploitation=? AND categorie=?  
#
# get_appSeTag: retourne les application pour un SE donne et contenant le tag
get_appSeTag;ajoute un nouveau peripherique (nom, type, fabricant);1 2;1;SELECT a.ID,a.nom,a.version,a.categorie,a.developpeur,a.tags,a.payante,a.date,a.mela,p.prix,p.renouvellement,c.nom_categorie FROM applications AS a LEFT JOIN payante AS p ON a.ID = p.application LEFT JOIN categorie AS c ON a.categorie = c.ID  LEFT JOIN applicationsSE AS s ON s.application = a.ID  WHERE s.systeme_exploitation=? AND tags LIKE '%?%' 
#
# get_appCategorieTag: retourne les application appartenent a une categorie et contenant le tag
get_appCategorieTag;ajoute un nouveau peripherique (nom, type, fabricant);1 2;1;SELECT a.ID,a.nom,a.version,a.categorie,a.developpeur,a.tags,a.payante,a.date,a.mela,p.prix,p.renouvellement,c.nom_categorie FROM applications AS a LEFT JOIN payante AS p ON a.ID = p.application LEFT JOIN categorie AS c ON a.categorie = c.ID  LEFT JOIN applicationsSE AS s ON s.application = a.ID  WHERE categorie=? AND tags LIKE '%?%' 
#
# get_appSeCategorieTag: retourne les application pour un SE donne et appartenent a une categorie et contenant le tag
get_appSeCategorieTag;ajoute un nouveau peripherique (nom, type, fabricant);1 1 2;1;SELECT a.ID,a.nom,a.version,a.categorie,a.developpeur,a.tags,a.payante,a.date,a.mela,p.prix,p.renouvellement,c.nom_categorie FROM applications AS a LEFT JOIN payante AS p ON a.ID = p.application LEFT JOIN categorie AS c ON a.categorie = c.ID  LEFT JOIN applicationsSE AS s ON s.application = a.ID  WHERE s.systeme_exploitation=? AND categorie=? AND tags LIKE '%?%' 
#
# get_droitApp: retourne les droit d'une application
get_droitApp;ajoute un nouveau peripherique (nom, type, fabricant);1;1;SELECT a.ID,a.nom,a.version,a.categorie,a.developpeur,a.tags,a.payante,a.date,a.mela,p.prix,p.renouvellement,c.nom_categorie FROM applications AS a LEFT JOIN payante AS p ON a.ID = p.application LEFT JOIN categorie AS c ON a.categorie = c.ID WHERE application=?
#
# get_appRecomande: retourne les application recomandé par les autre utilisateur
get_appRecomande;ajoute un nouveau peripherique (nom, type, fabricant);1;1;SELECT DISTINCT application FROM avis WHERE  elstar>4 AND client IN (SELECT client FROM avis WHERE elstar >4 AND application IN(SELECT application FROM avis WHERE client=? AND elstar>4))
#
# get_SeApp
get_SeApp;retourne les systeme d'exploitation d'une application;1;1;SELECT * FROM systeme_exploitation AS e LEFT JOIN applicationsSE AS a ON e.ID = a.systeme_exploitation WHERE a.application=?
#
# add_appPeriph
add_appPeriph;ajoute une application a un peripherique_client (peripherique_client.id,application.id);5 1 1;1;INSERT INTO application_installe (application,peripherique_client) (SELECT a.application,p.ID FROM peripheriques_client AS p LEFT JOIN applicationsSE AS a ON  p.systeme_exploitation=a.systeme_exploitation WHERE p.client=? AND p.ID=? AND a.application=?)
#
# get_avisMe
get_avisApp;ajoute un nouveau peripherique (nom, type, fabricant);5;1;SELECT * FROM avis WHERE client=? 
#
# get_avisApp
get_avisApp;ajoute un nouveau peripherique (nom, type, fabricant);1;1;SELECT * FROM avis WHERE application=? 
#
# add_avis
add_avis;ajoute un nouveau peripherique (nom, type, fabricant);5 1 1 2 6;1;INSERT INTO avis VALUES(?,?,?,?,?)
#
#
#
#
#
############# devellopeur ################
# get_appMe
get_appMe;ajoute un nouveau peripherique (nom, type, fabricant);5;2;SELECT a.ID,a.nom,a.version,a.categorie,a.developpeur,a.tags,a.payante,a.date,a.mela,p.prix,p.renouvellement,c.nom_categorie FROM applications AS a LEFT JOIN payante AS p ON a.ID = p.application LEFT JOIN categorie AS c ON a.categorie = c.ID WHERE developpeur=?
#
# add_app
add_app;ajoute un nouveau peripherique (nom, type, fabricant);2 2 1 5 2 3 6 1;2;INSERT INTO applications VALUES('',?,?,?,?,?,?,?,?)
#
# set_app
set_app;ajoute un nouveau peripherique (nom, type, fabricant);2 2 1 1 5;2;UPDATE applications SET version=? tags=?, mela=? WHERE ID=? AND developpeur=?;
# 
# add_payanteApp
add_payanteApp;ajoute un nouveau peripherique (nom, type, fabricant);1 5 1 1 1;2;UPDATE applications SET payante=1 WHERE ID=? AND developpeur=?;INSERT INTO payante VALUES(?,?,?)
#
# set_payante
set_payante;ajoute un nouveau peripherique (nom, type, fabricant);1 1 5;2;UPDATE payante SET prix=?, renouvellement=? WHERE application=? AND application IN (SELECT ID FROM applications WHERE developpeur=?)
#
#
#
#
#
#
#
#
#
#
